name: Digital twin runner

on:
  push:
    paths:
      - 'servers/execution/**'
  pull_request:
    paths:
      - 'servers/execution/**'
  workflow_dispatch:

env:
  NODE_VERSION: 20

jobs:
  test-runner:
    name: Test digital twin runner
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: servers/execution/runner/

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"

      - name: Run linting and formatting checks on runner
        run: |
          npm install -g prettier
          yarn install
          yarn syntax
          prettier -c --ignore-path ../.gitignore "**/*.{ts,tsx,css,scss}"

      - name: Build the runner
        if: success() || failure()
        run: |
          yarn build

      - name: Run tests
        if: success() || failure()
        run: |
          yarn test

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: servers/execution/runner/coverage/clover.xml
          flags: dt-runner

  publish-package-github:
    if: | 
      (startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/release-v'))

    name: Publish to GitHub Packages
    needs: [test-runner]
    uses: ./.github/workflows/publish-npm.yml
    with:
      node-version: 20
      registry-url: 'https://npm.pkg.github.com/'
      directory: servers/execution/runner
      package-name: ${{ vars.NPM_RUNNER_PACKAGE_NAME || '' }}
    secrets:
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-package-npm:
    if: |
      (startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/release-v'))

    name: Publish to GitHub Packages
    needs: [test-runner]
    uses: ./.github/workflows/publish-npm.yml
    with:
      node-version: 20
      registry-url: 'https://registry.npmjs.org'
      directory: servers/execution/runner
      package-name: ${{ vars.NPM_RUNNER_PACKAGE_NAME || '' }}
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
